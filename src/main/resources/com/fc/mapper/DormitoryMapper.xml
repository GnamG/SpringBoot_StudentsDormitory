<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.DormitoryMapper">
  <resultMap id="BaseResultMap" type="com.fc.entity.Dormitory">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="valid" jdbcType="VARCHAR" property="valid" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="building_id" jdbcType="VARCHAR" property="buildingId" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="lived_number" jdbcType="INTEGER" property="livedNumber" />
    <result column="max_number" jdbcType="INTEGER" property="maxNumber" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, valid, version, building_id, floor, lived_number, max_number, 
    sn
  </sql>
  <select id="selectByExample" parameterType="com.fc.entity.DormitoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dormitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dormitory
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dormitory
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.entity.DormitoryExample">
    delete from dormitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.entity.Dormitory">
    insert into dormitory (id, create_time, update_time, 
      valid, version, building_id, 
      floor, lived_number, max_number, 
      sn)
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{buildingId,jdbcType=VARCHAR}, 
      #{floor,jdbcType=VARCHAR}, #{livedNumber,jdbcType=INTEGER}, #{maxNumber,jdbcType=INTEGER}, 
      #{sn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fc.entity.Dormitory">
    insert into dormitory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="livedNumber != null">
        lived_number,
      </if>
      <if test="maxNumber != null">
        max_number,
      </if>
      <if test="sn != null">
        sn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="livedNumber != null">
        #{livedNumber,jdbcType=INTEGER},
      </if>
      <if test="maxNumber != null">
        #{maxNumber,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.entity.DormitoryExample" resultType="java.lang.Long">
    select count(*) from dormitory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dormitory
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.valid != null">
        valid = #{row.valid,jdbcType=VARCHAR},
      </if>
      <if test="row.version != null">
        version = #{row.version,jdbcType=INTEGER},
      </if>
      <if test="row.buildingId != null">
        building_id = #{row.buildingId,jdbcType=VARCHAR},
      </if>
      <if test="row.floor != null">
        floor = #{row.floor,jdbcType=VARCHAR},
      </if>
      <if test="row.livedNumber != null">
        lived_number = #{row.livedNumber,jdbcType=INTEGER},
      </if>
      <if test="row.maxNumber != null">
        max_number = #{row.maxNumber,jdbcType=INTEGER},
      </if>
      <if test="row.sn != null">
        sn = #{row.sn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dormitory
    set id = #{row.id,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      valid = #{row.valid,jdbcType=VARCHAR},
      version = #{row.version,jdbcType=INTEGER},
      building_id = #{row.buildingId,jdbcType=VARCHAR},
      floor = #{row.floor,jdbcType=VARCHAR},
      lived_number = #{row.livedNumber,jdbcType=INTEGER},
      max_number = #{row.maxNumber,jdbcType=INTEGER},
      sn = #{row.sn,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fc.entity.Dormitory">
    update dormitory
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="livedNumber != null">
        lived_number = #{livedNumber,jdbcType=INTEGER},
      </if>
      <if test="maxNumber != null">
        max_number = #{maxNumber,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fc.entity.Dormitory">
    update dormitory
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      building_id = #{buildingId,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      lived_number = #{livedNumber,jdbcType=INTEGER},
      max_number = #{maxNumber,jdbcType=INTEGER},
      sn = #{sn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>